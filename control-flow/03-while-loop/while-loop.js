// while (조건 부분) {
//   동작 부분
// }

// --------------------------------------------------------

// while 문 기본 예제: 1부터 10까지 출력
let i = 1;
while (i <= 10) {
  console.log(`${i} - 반복 중입니다.`);
  i++; // i의 값을 1씩 증가
}

// --------------------------------------------------------

// 특정 조건에서 가장 작은 7의 배수를 찾는 예제
// i 보다 큰 수 중에서 가장 작은 7의 배수 찾기
let num = 30; // 기준 숫자
while (num % 7 !== 0) {
  num++; // num이 7의 배수가 될 때까지 증가
}
console.log(`30보다 큰 가장 작은 7의 배수: ${num}`);

// --------------------------------------------------------

// while 문을 사용한 무한 루프와 조건에 따른 종료 예제
// 무한 반복을 사용하여 5가 될 때까지 반복
let count = 0;
while (true) {
  console.log(`현재 count 값: ${count}`);
  count++;

  // count가 5가 되면 루프 종료
  if (count === 5) {
    console.log("count가 5가 되어 반복을 종료합니다.");
    break; // while 문 종료
  }
}

// --------------------------------------------------------

// while 문 종료 후 변수 활용 예제
let j = 0;
while (j < 10) {
  console.log(j);
  j++;
}
console.log(`while 반복문 종료 후 j의 값: ${j}`);

// --------------------------------------------------------
// 실습 설명
// while 반복문을 사용하여 1 이상 100 이하의 홀수를 모두 출력해 보세요.
// 여기에 코드를 작성하세요 (성능 제일 좋은 코드)

// 방법 1
let k = 1;
while (k <= 100) {
  console.log(k);
  k += 2;
}

// 방법 2
let l = 1;
while (l <= 100) {
  if (l % 2 !== 0) {
    console.log(l);
  }
  l++;
}

// 방법 3
let m = 1;
while (m <= 50) {
  console.log(m * 2 - 1);
  m++;
}

// --------------------------------------------------------

// 실습
// 정수 n의 약수는 n을 어떤 수로 나누었을 때 나누어떨어지게 하는 정수를 의미합니다. 만약 정수 i가 정수 n의 약수라면, n을 i로 나누었을 때 나머지가 0이 됩니다.
// while문을 활용해서 정수 180의 약수를 모두 출력하고, 총 몇 개의 약수가 있는지 출력하는 프로그램을 작성해 보세요.

let n = 180;
let divisor = 1;
let count2 = 0;

while (divisor <= n) {
  if (n % divisor === 0) {
    console.log(divisor);
    count2++;
  }
  divisor++;
}

console.log(`180의 약수는 총 ${count2}개입니다.`);
